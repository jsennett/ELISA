TODO:

GUI

[X]   implement breakpoints
[X]   implement step until breakpoint
[X]   implement step until completion
[X]   correctly export/restore program
[X]   catch exceptions rather than crashing
[X]   Use pipeline-enabled button to set attribute in simulator
[X]   Get rid of LRU/Write Policy buttons.
[X]   Force users to use valid cache sizes (2^X)

Pipeline

[X]   pipeline/no-pipeline mode
[X]   implement integer operations
[X]   implement syscall to exit
[X]   test correctness
[X]   Handle multiple stage ALU operations
[ ]   Condition code registers after every ALU
[ ]   implement floating point operations

Benchmarks

[ ]   develop assembly benchmarks
   
Assembler

[X]    Support negative immediate and offsets: this should convert to appropriate
        size two's complement (16 bits for immediates)
[X]    Assemble floating point instructions
[X]    Support sections (.data / .text)
[X]    Add in all MIPS instructions
[X]    Allow labels to refer to variables in .data
[X]    Change register names to match MIPS naming ($v0, $t0, etc.)
[X]    support syscall command
[X]    Code validation, helpful error messsages
[-]    Documentation
  Optional
[ ]    Validate keywords (eg labels can be instruction names, registers 0-31)


Instructions
      Arithmetic
[X]    ADD
[X]    ADDI
[X]    SUB
[X]    SLL
[X]    SRL
[X]    MULT
[X]    DIV
[X]    AND
[X]    ANDI
[X]    OR
[X]    ORI
[X]    XOR
[X]    XORI
[X]    NOR
[X]    BEQ
[X]    BNE
[X]    BGEZ
[X]    BLEZ
[X]    BGZ
[X]    BLZ
[X]    J
[X]    JAL
[X]    JR
[X]    JALR
[X]    SLT
[X]    SLTI
[X]    LB
[X]    LW
[X]    SB
[X]    SW
[X]    SYSCALL
[ ]    ADD.S
[ ]    SUB.S
[ ]    MUL.S
[ ]    DIV.S
[ ]    CVT.S.W
[ ]    CVT.W.S
[ ]    C.EQ.S
[ ]    C.LE.S
[ ]    C.LT.S
[ ]    BC1T
[ ]    BC1F
[ ]    L.S
[ ]    S.S
